1.POI数据导出excel中如果数据量太大的话会直接返回json，不会返回excel。
2.mybatis中的#和$的区别
    #相当于对数据 加上 双引号，$相当于直接显示数据

    1. #将传入的数据都当成一个字符串，会对自动传入的数据加一个双引号。如：order by #user_id#，如果传入的值是111,那么解析成sql时的值为order by "111",
      如果传入的值是id，则解析成的sql为order by "id".
    2. $将传入的数据直接显示生成在sql中。如：order by $user_id$，如果传入的值是111,那么解析成sql时的值为order by 111,  
      如果传入的值是id，则解析成的sql为order by id.
    3. #方式能够很大程度防止sql注入。
    4.$方式无法防止Sql注入。
    5.$方式一般用于传入数据库对象，例如传入表名.
    6.一般能用#的就别用$.
    MyBatis排序时使用order by 动态参数时需要注意，用$而不是#
    
3.把list当成参传进存储过程
--定义一个对应数据类型的Object
CREATE OR REPLACE TYPE test as object(
FID NUMBER,  
NUM nVARCHAR2(30),  
TESKID NUMBER, 
CID NUMBER,
USERCODE nVARCHAR2(100)
)

--创建一个Object的List类型
CREATE OR REPLACE TYPE test_list as table of test


CREATE OR REPLACE PROCEDURE inserttenumber(
                       v_rec_class_list    IN test_list)is
    v_rec_class test;
    v_count number;
begin
    v_count := v_rec_class_list.count;
    for i in 1..v_count 
       loop 
          v_rec_class:=v_rec_class_list(i);
          insert into te_number(id,fid,NUM,teskid,STATE,cid,user_code)
		  values(tenumberseq.nextval,v_rec_class.fid,v_rec_class.NUM,v_rec_class.teskid,'-2',v_rec_class.cid,v_rec_class.USERCODE); 
           
       end loop;
end inserttenumber;
